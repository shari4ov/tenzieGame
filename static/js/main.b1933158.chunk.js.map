{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","react_default","a","createElement","className","style","onClick","holdDice","value","App","_React$useState","React","useState","allNewDice","_React$useState2","Object","slicedToArray","dice","setDice","_React$useState3","_React$useState4","tenzies","setTenzies","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","key","oldDice","objectSpread","react_confetti_min_default","ReactDOM","render","document","getElementById"],"mappings":"uKAEe,SAASA,EAAIC,GACxB,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,WACVC,MAAOP,EACPQ,QAAST,EAAMU,UAEfN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWP,EAAMW,mCCP5B,SAASC,IAAK,IAAAC,EACDC,IAAMC,SAASC,KADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACfO,EADeH,EAAA,GACVI,EADUJ,EAAA,GAAAK,EAEOR,IAAMC,UAAS,GAFtBQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEfE,EAFeD,EAAA,GAEPE,EAFOF,EAAA,GAWtB,SAASG,IACF,MAAO,CACAf,MAAOgB,KAAKC,KAAmB,EAAdD,KAAKE,UACtB1B,QAAO,EACP2B,GAAGC,eAGjB,SAASf,IAEF,IADA,IAAMgB,EAAQ,GACNC,EAAE,EAAEA,EAAE,GAAGA,IACVD,EAAQE,KAAKR,KAEpB,OAAOM,EApBdlB,IAAMqB,UAAU,WACT,IAAMC,EAAQhB,EAAKiB,MAAM,SAAAC,GAAG,OAAGA,EAAInC,SAC7BoC,EAAanB,EAAK,GAAGT,MACrB6B,EAAepB,EAAKiB,MAAM,SAAAC,GAAG,OAAEA,EAAI3B,QAAQ4B,IAC9CH,GAASI,GACLf,GAAW,IAEvB,CAACL,IAiCH,IAAMqB,EAAarB,EAAKsB,IAAI,SAAAJ,GAAG,OACxBlC,EAAAC,EAAAC,cAACP,EAAD,CACO4C,IAAKL,EAAIR,GACTnB,MAAO2B,EAAI3B,MACXR,OAAQmC,EAAInC,OACZO,SAAU,kBAZNoB,EAYmBQ,EAAIR,QAXlCT,EAAQ,SAAAuB,GAAO,OAAEA,EAAQF,IAAI,SAAAJ,GACtB,OAAOA,EAAIR,KAAKA,EAATZ,OAAA2B,EAAA,EAAA3B,CAAA,GACIoB,EADJ,CACQnC,QAAQmC,EAAInC,SACpBmC,MAJrB,IAAkBR,OAelB,OACO1B,EAAAC,EAAAC,cAAA,YACQkB,GAAUpB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,MACXD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,qGAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACPkC,GAERrC,EAAAC,EAAAC,cAAA,UACAC,UAAU,YACVE,QArCd,WACWe,GAMGC,GAAW,GACXJ,EAAQL,MANRK,EAAQ,SAAAuB,GAAO,OAAEA,EAAQF,IAAI,SAAAJ,GACtB,OAAOA,EAAInC,OACXmC,EAAIZ,UAkCHF,EAAQ,WAAW,eChEhDuB,IAASC,OAAO5C,EAAAC,EAAAC,cAACM,EAAD,MAAQqC,SAASC,eAAe","file":"static/js/main.b1933158.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Die(props) {\r\n    const styles = {\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\r\n    }\r\n    return (\r\n        <div \r\n            className=\"die-face\" \r\n            style={styles}\r\n            onClick={props.holdDice}\r\n        >\r\n            <h2 className=\"die-num\">{props.value}</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Die from \"./Die\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Confetti from \"react-confetti\";\r\n\r\nexport default function App(){\r\n       const [dice,setDice]=React.useState(allNewDice())\r\n       const [tenzies,setTenzies] = React.useState(false)\r\n       React.useEffect(()=>{\r\n              const allHeld=dice.every(die=> die.isHeld)\r\n              const firstValue = dice[0].value\r\n              const allSameValue = dice.every(die=>die.value===firstValue)\r\n              if(allHeld&&allSameValue){\r\n                     setTenzies(true)\r\n              }\r\n       },[dice])\r\n       function generateNewDie(){\r\n              return {\r\n                     value: Math.ceil(Math.random()*6),\r\n                     isHeld:false,\r\n                     id:nanoid()\r\n              }\r\n       }\r\n       function allNewDice(){\r\n              const newDice=[]\r\n              for(let i=0;i<10;i++){\r\n                     newDice.push(generateNewDie())\r\n              }\r\n              return newDice\r\n       }\r\n       function rollDice(){\r\n              if(!tenzies){\r\n                     setDice(oldDice=>oldDice.map(die=>{\r\n                            return die.isHeld ?\r\n                            die:generateNewDie()\r\n                     }))\r\n              }else{\r\n                     setTenzies(false)\r\n                     setDice(allNewDice())\r\n              }\r\n       }\r\n       function holdDice(id){\r\n              setDice(oldDice=>oldDice.map(die=>{\r\n                     return die.id===id?\r\n                            {...die,isHeld:!die.isHeld}:\r\n                            die\r\n              }))\r\n       }\r\n       const diceElements=dice.map(die=>(\r\n              <Die\r\n                     key={die.id}\r\n                     value={die.value}\r\n                     isHeld={die.isHeld}\r\n                     holdDice={()=>holdDice(die.id)}\r\n              />\r\n       ))\r\n       return(\r\n              <main>\r\n                     {tenzies&& <Confetti/>}\r\n                     <h1 className=\"title\">Tenzies</h1>\r\n                     <p className=\"instructions\">Roll until all dice are the same. \r\n                     Click each die to freeze it at its current value between rolls.</p>\r\n                     <div className=\"dice-container\">\r\n                            {diceElements}\r\n                     </div>\r\n                     <button\r\n                     className=\"roll-dice\"\r\n                     onClick={rollDice}>\r\n                            {tenzies?\"New Game\":\"Roll\"}\r\n                     </button>\r\n              </main>\r\n\r\n       )\r\n}","import React from \"react\";\r\nimport ReactDOM  from \"react-dom\";\r\nimport App from './App';\r\nimport './style.css'\r\nReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}